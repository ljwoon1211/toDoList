{"version":3,"file":"static/js/591.0851f263.chunk.js","mappings":"qMAMA,MAAMA,EAASC,EAAAA,GAAOC,GAAG;;;;EAMV,SAASC,IACtB,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,KACxCC,EAAYC,IAAeF,EAAAA,EAAAA,WAAkB,IAC7CG,EAAkBC,IAAqBJ,EAAAA,EAAAA,UAAwB,OAC/DK,EAAgBC,IAAmBN,EAAAA,EAAAA,UAAiB,IACrDO,GAAaC,EAAAA,EAAAA,IAAeC,EAAAA,GAC5BC,GAAgBC,EAAAA,EAAAA,IAAkBF,EAAAA,GAoClCG,EAAYA,KAChBV,GAAc,GACdE,EAAoB,MACpBE,EAAkB,GAAG,EAEvB,OACEO,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACAF,EAAAA,EAAAA,MAACnB,EAAM,CAAAqB,SAAA,EACLC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,IAAIH,SAAC,eAEjBC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,SACEG,SA/CwBC,IAC1BrB,EAAeqB,EAAEC,OAAOC,MAAM,EA+C5BA,MAAOxB,EACPyB,YAAY,kBACdP,EAAAA,EAAAA,KAAA,UAAQQ,QA9CaC,KACrBf,GAAcgB,GAAO,IAAIA,EAAK5B,KAC9BC,EAAe,GAAG,EA4CcgB,SAAC,SACjCC,EAAAA,EAAAA,KAAA,MAAAD,SACGR,EAAWoB,KAAKC,IACfZ,EAAAA,EAAAA,KAAA,MAAAD,SACId,GAAc2B,IAAazB,GAC3BU,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOG,SAAWC,GAAId,EAAkBc,EAAEC,OAAOC,OAASA,MAAOjB,KACjEW,EAAAA,EAAAA,KAAA,UAAQQ,QAASA,KAzC3Bd,GAAeH,GACaA,EAAWoB,KAAKC,GACxCA,IAAazB,EAAmBE,EAAiBuB,WAIrDhB,KAmCoDG,SAAC,YAC3CC,EAAAA,EAAAA,KAAA,UAAQQ,QAASA,KA3B3BZ,GA2B4D,EAAAG,SAAC,eAGrDF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAAD,SAAOa,KACPZ,EAAAA,EAAAA,KAAA,UAAQQ,QAASA,IAtDJI,KACvB1B,GAAc,GACdE,EAAoBwB,GACpBtB,EAAkBsB,EAAS,EAmDKC,CAAgBD,GAAUb,SAAC,UACjDC,EAAAA,EAAAA,KAAA,UAAQQ,QAASA,IAvCLI,KACtB,MAAME,EAAoBvB,EAAWwB,QAAQC,GAAgBA,IAAeJ,IAC5ElB,EAAcoB,EAAkB,EAqCCG,CAAeL,GAAUb,SAAC,eAX9Ca,SAoBjB,C,+DC1FO,IAAK/B,EAAU,SAAVA,GAAU,OAAVA,EAAU,cAAVA,EAAU,cAAVA,EAAU,YAAVA,CAAU,MAMf,MAAMY,GAAkByB,EAAAA,EAAAA,IAAe,CAC5CC,IAAK,kBACLC,SAASC,EAAAA,EAAAA,GAAqB,kBAAmB,CAACxC,EAAWyC,MAAOzC,EAAW0C,MAAO1C,EAAW2C,OACjGC,QAAS,CACPC,IAAgB,IAAf,MAAEC,GAAOD,EACRC,GAAOf,KACLgB,EAAAA,EAAAA,GAAmB,kBAAmBhB,EAAS,GAC/C,I,yCChBD,MAAMgB,EAAqBA,CAACT,EAAab,KAC9CuB,aAAaC,QAAQX,EAAKY,KAAKC,UAAU1B,GAAO,EAGrCe,EAAuBA,CAAIF,EAAac,KACnD,MAAMC,EAAcL,aAAaM,QAAQhB,GACzC,OAAOe,EAAcH,KAAKK,MAAMF,GAAeD,CAAY,C","sources":["pages/Categories.tsx","recoil/atoms/categories.ts","utils/localStorage.ts"],"sourcesContent":["import { useRecoilValue, useSetRecoilState } from \"recoil\"\nimport { categoriesState } from \"../recoil/atoms/categories\"\nimport { useState } from \"react\"\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = styled.div`\n  display: flex;\n  align-items: baseline;\n  gap: 10px;\n`\n\nexport default function Categories(){\n  const [addCategory, setAddCategory] = useState('');\n  const [isEditMode, setIsEditMode]=useState<boolean>(false)\n  const [updateCategoryId, setUpdateCategoryId]=useState<string | null>(null)\n  const [updateCategory, setUpdateCategory]=useState<string>('')\n  const categories = useRecoilValue(categoriesState)\n  const setCategories = useSetRecoilState(categoriesState)\n\n  const handlerAddCategory = (e: React.ChangeEvent<HTMLInputElement>) =>{\n    setAddCategory(e.target.value)\n  }\n\n  const handleAddClick = () =>{\n    setCategories(prev=> [...prev,addCategory])\n    setAddCategory('')\n  }\n\n  const handleEditClick = (category:string) =>{\n    setIsEditMode(true)\n    setUpdateCategoryId(category)\n    setUpdateCategory(category);\n  }\n\n  const handleUpdateClick = ()=>{\n    setCategories((categories) => {\n      const updatedCategories = categories.map((category) =>\n        category === updateCategoryId ? updateCategory : category\n      );\n        return updatedCategories;\n    });\n    resetState()\n  }\n\n  const handleDelClick = (category:string)=>{\n    const deletedCategories = categories.filter((prevCategory)=> prevCategory!==category)\n    setCategories(deletedCategories)\n  }\n\n  const handleCancelClick = (category:string) =>{\n    resetState()\n  }\n\n  const resetState =()=>{\n    setIsEditMode(false);\n    setUpdateCategoryId(null);\n    setUpdateCategory(\"\");\n  }\n  return (\n    <>\n    <Header>\n      <h2>Edit Category</h2>\n      <Link to={\"/\"}> Home </Link>\n    </Header>\n    <hr/>\n    <input \n      onChange={handlerAddCategory}\n      value={addCategory}\n      placeholder=\"Add category\"/>\n    <button onClick={handleAddClick}>Add</button>\n    <ul>\n      {categories.map((category)=>\n        <li key={category}>\n          {(isEditMode && category === updateCategoryId) ? \n            <div>\n              <input onChange={(e)=>setUpdateCategory(e.target.value)}  value={updateCategory} /> \n              <button onClick={()=> handleUpdateClick()}>Update</button>\n              <button onClick={()=> handleCancelClick(category)}>Cancel</button>\n            </div>\n            :\n            <div>\n              <span>{category}</span>\n              <button onClick={()=> handleEditClick(category)}>Edit</button>\n              <button onClick={() => handleDelClick(category)}>Delete</button>\n            </div>\n          }\n\n        </li>\n      )}\n    </ul>\n    </>\n  )\n}","import { atom } from \"recoil\";\nimport { loadFromLocalStorage, saveToLocalStorage } from \"../../utils/localStorage\";\n\nexport enum Categories {\n  \"TO_DO\" = \"TO_DO\",\n  \"DOING\" = \"DOING\",\n  \"DONE\" = \"DONE\"\n}\n\nexport const categoriesState = atom<string[]>({\n  key: \"categoriesState\",\n  default: loadFromLocalStorage(\"categoriesState\", [Categories.TO_DO, Categories.DOING, Categories.DONE]),\n  effects: [\n    ({ onSet }) => {\n      onSet((category) => {\n        saveToLocalStorage(\"categoriesState\", category); // 상태 변경 시 로컬스토리지에 저장\n      });\n    },\n  ],\n})\n\n\n","export const saveToLocalStorage = (key: string, value: any) => {\n  localStorage.setItem(key, JSON.stringify(value));\n};\n\nexport const loadFromLocalStorage = <T>(key: string, defaultValue: T): T => {\n  const storedValue = localStorage.getItem(key);\n  return storedValue ? JSON.parse(storedValue) : defaultValue;\n};"],"names":["Header","styled","div","Categories","addCategory","setAddCategory","useState","isEditMode","setIsEditMode","updateCategoryId","setUpdateCategoryId","updateCategory","setUpdateCategory","categories","useRecoilValue","categoriesState","setCategories","useSetRecoilState","resetState","_jsxs","_Fragment","children","_jsx","Link","to","onChange","e","target","value","placeholder","onClick","handleAddClick","prev","map","category","handleEditClick","deletedCategories","filter","prevCategory","handleDelClick","atom","key","default","loadFromLocalStorage","TO_DO","DOING","DONE","effects","_ref","onSet","saveToLocalStorage","localStorage","setItem","JSON","stringify","defaultValue","storedValue","getItem","parse"],"sourceRoot":""}